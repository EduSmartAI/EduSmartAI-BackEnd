services:
  # API Services
  studentservice.api:
    build:
      context: .
      dockerfile: Services/StudentService/StudentService.API/Dockerfile
    ports:
      - "7002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - STUDENT_SERVICE_DB=${STUDENT_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - STUDENT_SERVICE_URL=${STUDENT_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network

  authservice.api:
    build:
      context: .
      dockerfile: Services/AuthService/AuthService.API/Dockerfile
    ports:
      - "7001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - AUTH_SERVICE_DB=${AUTH_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - STUDENT_SERVICE_URL=${STUDENT_SERVICE_URL}
    networks:
      - edusmartai-network

  quizservice.api:
    build:
      context: .
      dockerfile: Services/QuizService/QuizService.API/Dockerfile
    ports:
      - "7003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - QUIZ_SERVICE_DB=${QUIZ_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - STUDENT_SERVICE_URL=${STUDENT_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network
  
  teacherservice.api:
    build:
      context: .
      dockerfile: Services/TeacherService/TeacherService.API/Dockerfile
    ports:
      - "7004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - TEACHER_SERVICE_DB=${TEACHER_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network
      
  paymentservice.api:
    build:
      context: .
      dockerfile: Services/PaymentService/PaymentService.API/Dockerfile
    ports:
      - "7007:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - PAYMENT_SERVICE_DB=${PAYMENT_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network
        
  notificationservice.api:
    build:
      context: .
      dockerfile: Services/NotificationService/NotificationService.API/Dockerfile
    ports:
      - "7008:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - NOTIFICATION_SERVICE_DB=${NOTIFICATION_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network
  
  utilityservice.api:
    build:
      context: .
      dockerfile: Services/UtilityService/UtilityService.API/Dockerfile
    ports:
      - "7010:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - UTILITY_SERVICE_DB=${UTILITY_SERVICE_DB}
      - REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - edusmartai-network
    
    
  # Gateway
  reverseproxy:
    build:
      context: .
      dockerfile: Gateways/ReverseProxy/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - studentservice.api
      - authservice.api
      - quizservice.api
      - teacherservice.api
      - paymentservice.api
      - notificationservice.api
      - utilityservice.api
    networks:
      - edusmartai-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - STUDENT_SERVICE_URL=${STUDENT_SERVICE_URL}
      - QUIZ_SERVICE_URL=${QUIZ_SERVICE_URL}
      - TEACHER_SERVICE_URL=${TEACHER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}
      - UTILITY_SERVICE_URL=${UTILITY_SERVICE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - JWT_AUDIENCE=${JWT_AUDIENCE}


# Networks
networks:
  edusmartai-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: